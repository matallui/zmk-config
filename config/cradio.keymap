/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
    tapping-term-ms = <200>;
};
&lt {
    tapping-term-ms = <200>;
    quick-tap-ms = <170>;
};
/ {
    behaviors {
        lt_hp: lt_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <180>;
            bindings = <&mo>, <&kp>;
            display-name = "Layer-Tap";
       };
        mt_qt: mt_quick_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "hold-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <180>;
        };
        mt_hr: mt_homerow {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
        };
        accute_grave: accute_grave {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LA(E)>, <&kp LA(GRAVE)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        tilde_caret: tilde_caret {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LA(N)>, <&kp LA(I)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};
/ { 
    keymap {
        compatible = "zmk,keymap";
                
        default_layer {
        bindings = <
        &kp Q          &kp W          &kp E  &kp R          &kp T                   &kp Y      &kp U             &kp I      &kp O            &kp P
        &kp A          &kp S          &kp D  &kp F          &kp G                   &kp H      &kp J             &kp K      &kp L            &kp SEMI
        &mt_hr LGUI Z  &mt_hr LALT X  &kp C  &kp V          &kp B                   &kp N      &kp M             &kp COMMA  &mt_hr RALT DOT  &mt_hr RGUI SLASH
                                             &mt LCTRL TAB  &lt_hp 1 ENTER          &lt 2 SPC  &mt_qt LSFT BSPC
        >;
        };

        left_layer {
        bindings = <
        &kp EXCL          &kp AT            &kp POUND  &kp DLLR  &kp PRCNT               &kp STAR     &kp N7  &kp N8  &kp N9          &kp CARET
        &kp APOS          &kp GRAVE         &kp LPAR   &kp RPAR  &kp BSLH                &kp PLUS     &kp N4  &kp N5  &kp N6          &kp MINUS
        &mt_hr LGUI LBRC  &mt_hr LALT RBRC  &kp LBKT   &kp RBKT  &kp AMPS                &kp N0       &kp N1  &kp N2  &mt_hr RALT N3  &mt_hr RGUI EQUAL
                                                       &trans    &trans                  &kp LG(SPC)  &trans
        >;
        };
        
        right_layer {
        bindings = <
        &kp ESC   &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &accute_grave             &kp HOME         &kp PG_DN         &kp PG_UP       &kp END      &kp BSPC
        &kp TAB   &kp C_PP    &kp C_PREV    &kp C_NEXT    &tilde_caret              &kp LEFT         &kp DOWN          &kp UP          &kp RIGHT    &kp RET
        &kp LGUI  &kp LALT    &kp C_BRI_DN  &kp C_BRI_UP  &kp LA(C)                 &kp LC(LS(TAB))  &kp LG(LA(DOWN))  &kp LG(LA(UP))  &kp LC(TAB)  &kp RSFT
                                            &trans        &kp LG(SPC)               &trans           &trans
        >;
        };	
    };
};
