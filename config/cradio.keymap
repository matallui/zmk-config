/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
};
&lt {
    tapping-term-ms = <200>;
};
/ {
    behaviors {
        comma_under: comma_under {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp UNDER>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dot_bang: dot_bang {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mt_dot_bang: mt_dot_bang {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            #binding-cells = <2>;
            bindings = <&kp>, <&dot_bang>;
        };
        bspc_td_mt: tap_dance_mod_tap {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt LCTRL BSPC>, <&kp BSPC>;
        };
        spc_td_mt: tap_dance_mod_tap {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt LSFT SPC>, <&kp SPC>;
        };
    };
};
/ { 
    keymap {
        compatible = "zmk,keymap";
                
        default_layer {
        bindings = <
        &kp Q       &kp W       &kp E       &kp R       &kp T                   &kp Y           &kp U       &kp I         &kp O                &kp P
        &kp A       &kp S       &kp D       &kp F       &kp G                   &kp H           &kp J       &kp K         &kp L                &kp APOS
        &mt LGUI Z  &mt LALT X  &kp C       &kp V       &kp B                   &kp N           &kp M       &comma_under  &mt_dot_bang RALT 0  &mt RGUI SLASH
                                            &lt 1 TAB   &bspc_td_mt             &spc_td_mt      &lt 2 ENTER 
        >;
        };

        left_layer {
        bindings = <
        &kp GRAVE    &kp AT       &kp POUND  &kp DLLR  &kp PRCNT           &kp CARET  &kp N7  &kp N8  &kp N9       &kp MINUS
        &kp BSLH     &kp SEMI     &kp LPAR   &kp RPAR  &kp AMPS            &kp COLON  &kp N4  &kp N5  &kp N6       &kp PLUS
        &mt LGUI LT  &mt LALT GT  &kp LBKT   &kp RBKT  &kp UNDER           &kp LBKT   &kp N1  &kp N2  &mt RALT N3  &mt RGUI EQUAL
                                             &trans    &trans              &trans     &trans
        >;
        };
        
        right_layer {
        bindings = <
        &kp ESC   &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &none           &kp HOME         &kp PG_DN         &kp PG_UP      &kp END       &kp BSPC
        &kp TAB   &kp C_PP    &kp C_PREV    &kp C_NEXT    &none           &kp LEFT         &kp DOWN          &kp UP         &kp RIGHT     &kp RET
        &kp LGUI  &kp LALT    &kp C_BRI_DN  &kp C_BRI_UP  &none           &kp LC(LS(TAB))  &kp LG(LA(DOWN))  &kp LG(LA(UP))  &kp LC(TAB)  &none
                                            &trans        &trans          &trans           &trans
        >;
        };	
    };
};
