/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
    // flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";

        combo_lctrl {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp LCTRL>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp LALT>;
        };
        
        combo_lgui {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp LGUI>;
        };
        
        combo_rgui {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp RGUI>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp RALT>;
        };

        combo_rctrl {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp LCTRL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
                
        default_layer {
        bindings = <
        &kp Q       &kp W   &kp F   &kp P   &kp B               &kp J   &kp L   &kp U       &kp Y   &kp SEMI
        &kp A       &kp R   &kp S   &kp T   &kp G               &kp M   &kp N   &kp E       &kp I   &kp O
        &kp Z       &kp X   &kp C   &kp D   &kp V               &kp K   &kp H   &kp CMMA    &kp DOT &kp SLASH
                                    &mo 1   &kp LSHFT           &kp SPC &mo 2 
        >;
        };

        left_layer {
        bindings = <
        &kp ESC     &none       &kp LG(LS(3))   &kp LG(LS(4))   &kp LG(LS(5))       &kp CARET   &kp AMPS    &kp STAR    &kp LPAR    &kp RPAR
        &kp TAB     &none       &none           &none           &none               &kp MINUS   &kp EQL     &kp SQT     &kp LBRC    &kp RBRC
        &kp LG(Z)   &kp LG(X) 	&kp LG(C)       &kp LG(V)       &none               &kp UNDER   &kp PLUS    &kp DQT     &kp LBKT    &kp RBKT
                                                &mo 1           &none               &kp SPC     &mo 3
        >;
        };
        
        right_layer {
        bindings = <
        &kp BANG    &kp ATSN    &kp HASH    &kp DLLR    &kp PRCT            &kp HOME    &kp PG_DN   &kp PG_UP       &kp END         &caps_word
        &kp GRAVE   &none       &kp BSLH    &kp PIPE    &none               &kp LEFT    &kp DOWN    &kp UP          &kp RIGHT       &kp RET
        &kp TILDE   &none       &none       &none       &none               &none       &kp BSPC    &kp LA(BSPC)    &kp LG(BSPC)    &kp DEL
                                            &mo 3       &trans              &none       &mo 2
        >;
        };	
        
        tri_layer {
        bindings = <
        &none   &kp C_MUTE  &kp C_VOL_DN    &kp C_VOL_UP    &bt BT_CLR          &none   &kp N7  &kp N8  &kp N9  &kp BSPC
        &none   &kp C_PP    &kp C_PREV      &kp C_NEXT      &bt BT_NXT          &none   &kp N4  &kp N5  &kp N6  &kp RET
        &reset  &none       &kp C_BRI_DN    &kp C_BRI_UP    &bt BT_PRV          &kp N0  &kp N1  &kp N2  &kp N3  &kp DOT
                                            &trans          &trans              &trans  &trans
        >;
        };
    };
};
